# Change tmux prefix from C-b to C-s
unbind C-b
set -g prefix C-x

#bind-key -r C-d send-prefix

# hit prefix r to reload tmux after sourcing ~/.tmux.conf
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Navigation between panes inside a tmux window
# -n means no-prefix (i.e we don't need the prefix key for the following)
#bind-key -n C-h select-pane -L
#bind-key -n C-j select-pane -D
#bind-key -n C-k select-pane -U
#bind-key -n C-l select-pane -R

# Use richer colors in tmux windows (default uses only 16 colors!)
set -g default-terminal "screen-256color"

# Change the foreground and background colors in the status bar
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'
# Change the background color of the current active window
set-window-option -g window-status-current-style '#111111'

# Set max lenth of left text (tmux session name) to 50 (default is only 10)
set -g status-left-length 50

# set which information and its format to be displayed in right-hand-side of the status bar
set -g status-right "[Pane: #P] #(date '+%a, %b %d - %I:%M')"

# Split windows horizontally and vertically
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'

# Resize panes (fine grain): use shift+arrow_keys to resize by 2 cursor shifts
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 2
bind -n S-Up resize-pane -U 2


# Resize panes (coarse grain): use Ctrl+arrow_keys to resize by 10 cursor shifts
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 10
bind -n C-Up resize-pane -U 10

# Adjust the new window binding to open at the same path as the current pane
bind c new-window -c '#{pane_current_path}'

# Start window numbering from 1 (easier navigation between windows)
set -g base-index 1
set -g renumber-windows on

# Break pane to a new window (add -d to let the new window be in the background
#    (i.e stay in the current window)
#bind-key b break-pane -d
bind-key b break-pane

# Choose a running session/window: hitting space on a session expands it further
bind-key C-j choose-tree

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# Quickly view system & process info in htop
bind-key h split-window -h "htop"

# Fuzzy search within tmux-sessions
#bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Break/detach the current pane into a new session
bind-key C-b send-keys 'tat && exit' 'C-m'

# Killing sessions, but staying in tmux (if other sessions are there)
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Set tmux to Vi mode
set-window-option -g mode-keys vi
# Scroll up/down with j/k
#bind-key -t vi-copy 'j' page-up
#bind-key -t vi-copy 'k' page-down
# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection
# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
